Step 1) START
Step 2) DEFINE struct \`node\` with fields \`data\` (integer), \`left\` (pointer to struct \`node\`), and \`right\` (pointer to struct \`node\`)
Step 3) DEFINE function \`newNode\` that takes an integer \`data\` as input and returns a pointer to a new struct \`node\`
Step 4)     ALLOCATE memory for a new struct \`node\` and assign the pointer to \`node\`
Step 5)     SET \`node\`->\`data\` = \`data\`
Step 6)     SET \`node\`->\`left\` = NULL
Step 7)     SET \`node\`->\`right\` = NULL
Step 8)     RETURN \`node\`
Step 9) DEFINE function \`insert\` that takes a pointer to a struct \`node\` called \`node\` and an integer \`data\` as input, and returns a pointer to a struct \`node\`
Step 10)    IF \`node\` is NULL THEN
Step 11)        SET \`temp\` = CALL \`newNode\` with \`data\`
Step 12)        RETURN \`temp\`
Step 13)    IF \`data\` < \`node\`->\`data\` THEN
Step 14)        SET \`node\`->\`left\` = CALL \`insert\` with \`node\`->\`left\` and \`data\`
Step 15)    ELSE
Step 16)        IF \`data\` > \`node\`->\`data\` THEN
Step 17)            SET \`node\`->\`right\` = CALL \`insert\` with \`node\`->\`right\` and \`data\`
Step 18)    RETURN \`node\`
Step 19) DEFINE function \`getLeafCount\` that takes a pointer to a struct \`node\` called \`node\` as input and returns an integer
Step 20)    IF \`node\` is NULL THEN
Step 21)        RETURN 0
Step 22)    IF \`node\`->\`left\` is NULL AND \`node\`->\`right\` is NULL THEN
Step 23)        RETURN 1
Step 24)    ELSE
Step 25)        SET \`left_count\` = CALL \`getLeafCount\` with \`node\`->\`left\`
Step 26)        SET \`right_count\` = CALL \`getLeafCount\` with \`node\`->\`right\`
Step 27)        RETURN \`left_count\` + \`right_count\`
Step 28) DEFINE function \`main\`
Step 29)    INITIALIZE \`root\` = NULL
Step 30)    SET \`root\` = CALL \`insert\` with \`root\` and 50
Step 31)    CALL \`insert\` with \`root\` and 30
Step 32)    CALL \`insert\` with \`root\` and 20
Step 33)    CALL \`insert\` with \`root\` and 40
Step 34)    CALL \`insert\` with \`root\` and 70
Step 35)    CALL \`insert\` with \`root\` and 60
Step 36)    CALL \`insert\` with \`root\` and 80
Step 37)    SET \`leaf_count\` = CALL \`getLeafCount\` with \`root\`
Step 38)    PRINT "Number of leaf nodes is ", \`leaf_count\`, newline character
Step 39)    RETURN 0
Step 40) STOP